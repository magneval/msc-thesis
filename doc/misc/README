= Diploma 2 log

== 1st week

=== 2011-09-06

In ULX, meeting with Gabor, Ivan and Akos, discussing what "workflow
integration in an office environment" means.

No consensus, next meeting scheduled later this week.

=== 2011-09-07

Replied to redmine ticket: the LPSP extension fails to open a GUI window on
OSX. I already found a possible fix, searched the exact commit and bug id.

Set up a sharepoint virtual machine on localhost. (I can't get wireshark to
monitor the traffic in both directions when sharepoint runs on a remote virtual
machine.)

=== 2011-09-08

Meeting with Akos: we clarified most of the points in the initial "for this
semester" spec, I need to write up a more detailed one.

Meeting with Ivan and Gabor: more discussion, especially about what does a
long-term workflow stand for, decision points and undoing a task assignment.

Wrote up a more detailed spec in SVN.

=== 2011-09-09

In ULX. Ivan pointed out a drools (including jbmp5) demo they set up earlier:

http://droolsdemo-process:8080/gwt-console/
http://droolsdemo-process:8080/gwt-console-server/

Based on that, I'm trying to set up my own jbmp instance. Downloaded
jbpm-5.1.0.Final-installer-full.zip from
http://sourceforge.net/projects/jbpm/files/jBPM%205/jbpm-5.1.0.Final/.

Following the install.html from that ZIP, I get a web console at
http://localhost:8080/jbpm-console, and the REST API at
http://localhost:8080/gwt-console-server/.

Found more documentation at: http://docs.jboss.org/jbpm/v5.1/userguide/

This was also helpful: http://jkrzemie.wordpress.com/2011/03/30/jbpm-5-0-creating-simple-human-tasks-with-variables/

Questions:
- where are human task templates stored? -> looks like in separate .ftl files, have to be deployed using guvnor.
- user management? -> should be plain ini-like text files under auth/, but that did not really work here for some reason.
- rest interface auth problems -> the example provided in the documentation is obsolete, using apache httpclient should be a solution, example here: http://anonsvn.jboss.org/repos/riftsaw/trunk/samples/quickstart/management/src/org/jboss/riftsaw/management/ManagementClient.java

=== 2011-09-10

- I have a working example on how to authenticate and get list of personal tasks as JSON.
- Also read about gson: http://code.google.com/p/google-gson/ which is used by
  jboss to serialize / unserialize java objects to/from json. I now have a
  working example on how to build a List<Task> object from a JSON result (as
  far as I see, it's necessary to write TaskRef.java and TaskRefWrapper.java
  manually to do so).

Then I looked at related work. Keywords: 'document based workflow',
'document-driven workflow', 'document-centric workflows'.

- http://php.scripts.psu.edu/faculty/a/x/axk41/BPM05-jerry-reprint.pdf
  A framework for document-driven workflow systems (J Wang)
  -> details why information and resource based workflows are also important, not just control based ones
  -> idea: user changes the document, change listeners intercepts changes, check constraints, then accept or reject
           various complex features planned: split/merge of documents, different locking types
  -> implementation using sql triggers (ugh)
  -> detailed comparison of control flow based vs. document based approach (pro/con)
- https://mailserver.di.unipi.it/ricerca/proceedings/ICSE2008/sam/p21.pdf
  Mobility in the virtual office: a document-centric workflow approach (R Carbon, G Johann, T Keuler, D Muthig)
  -> introduces decentralized document-driven workflows, where changes to workflows travel with the documents
     decentralization is handled with a peer-to-peer architecture
- http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.86.6547&rep=rep1&type=pdf
  XDoC-WFMS: A Framework for Document Centric Workflow Management System (R Krishnan, L Munaga)
  -> great examples where document-centric approach is intuitive: newspaper editing, processing job applications
  -> idea: documents have an embedded micro-agent, so the document itself will know where to submit, etc.
- http://ce.sharif.edu/~yuosefsa/article/CS.pdf
  Access control in document-centric workflow systems--an agent-based approach (RA Botha)
  -> an approach without decoupling: here the workflow object communicates with the document object

=== 2011-09-11

Worked on the 'recently used documents' feature in the extension, requested by Ivan.

Version to test: lpsp-0.1-387-g273a329.oxt

Implemented functions:
- modified the extension configuration schema, so it can store a list of recently used URL's for each configured server.
- when opening a document, that list is loaded from $HOME/.openoffice.org/3/user/registrymodifications.xcu, the opened document is inserted to the start of the list, then saved.
- there is a new button in the file picker, making it possible to view this list
- the 'up' button can be used to return to the root directory from the recently used documents

== 2nd week

=== 2011-09-12

Worked on the favorites feature in the extension.

Version to test: lpsp-0.1-396-g4ecd817.oxt

Implemented functions:
- new button to add a folder or file to favorites
- add/delete is first confirmed using a popup dialog
- new button to list favorites
- as with recently used documents, the 'up' button can be used to return to the root directory

=== 2011-09-13

Created my first BPMN with two human tasks (and committed to SVN). That sounds
easy, but there were two pitfalls:

- starting the h2 database and then starting jboss is not enough, there is a need to start a separate 'human task server' as well

So the proper way to restart jbpm after changing the BPMN and/or templates is:

----
ant stop.jboss && ant stop.h2 && ant start.h2 && ant start.jboss && ant start.human.task
----

- creating a new BPMN does not work with 'File -> New -> File', and just using
  the `.bpmn` extension, as that results in an XML reader exception, what works
  is: 'File -> New -> Other', then 'Drools -> Flow file'

=== 2011-09-14

In ULX. Worked on completing a task via REST API, created an example
successfully. First I thought it will be easy as the login form already used
UrlEncodedFormEntity successfully, but on task completion a MultipartEntity
should be used to send the (empty) form.

Ported the sample codes to http-core 4.x (that is needed, as 3.x has a
different api, not supporting NTLM auth). Created a WFHandler (similar to the
Handler of the sharepoint jar):

- it can check username/password - login
- can list assigned tasks
- can complete a task
- can get the document url of a task
- can list documents: it simulates a root directory with documents, extracted from assigned tasks.

Figured out how to add new users to jbpm and/or change password: there is an
auth/users.properties file, but that's used by the installer only. The real
configuration file is under jboss-*/server/default/conf/users.properties. Once
updated and jbpm is restarted, logging in with the new user works fine.

Then - for some unknown reason - the eclipse of jbpm stopped recognizing bpmn
files as a graphically editable object, finally I had to re-deploy the eclipse
configuration.

Finally a problem: assigning a task to the user `krisv` works, but when I try to assign a task to the user `admin`, I get:

----
     [java] javax.persistence.RollbackException: Error while commiting the transaction
     [java]     at org.hibernate.ejb.TransactionImpl.commit(TransactionImpl.java:71)
     [java]     at org.jbpm.task.service.TaskServiceSession.doOperationInTransaction(TaskServiceSession.java:820)
     [java]     at org.jbpm.task.service.TaskServiceSession.addTask(TaskServiceSession.java:134)
     [java]     at org.jbpm.task.service.TaskServerHandler.messageReceived(TaskServerHandler.java:109)
     [java]     at org.jbpm.task.service.mina.MinaTaskServerHandler.messageReceived(MinaTaskServerHandler.java:41)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain$TailFilter.messageReceived(DefaultIoFilterChain.java:713)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain.callNextMessageReceived(DefaultIoFilterChain.java:434)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain.access$1200(DefaultIoFilterChain.java:46)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl$1.messageReceived(DefaultIoFilterChain.java:793)
     [java]     at org.apache.mina.filter.codec.ProtocolCodecFilter$ProtocolDecoderOutputImpl.flush(ProtocolCodecFilter.java:375)
     [java]     at org.apache.mina.filter.codec.ProtocolCodecFilter.messageReceived(ProtocolCodecFilter.java:229)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain.callNextMessageReceived(DefaultIoFilterChain.java:434)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain.access$1200(DefaultIoFilterChain.java:46)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl$1.messageReceived(DefaultIoFilterChain.java:793)
     [java]     at org.apache.mina.filter.logging.LoggingFilter.messageReceived(LoggingFilter.java:176)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain.callNextMessageReceived(DefaultIoFilterChain.java:434)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain.access$1200(DefaultIoFilterChain.java:46)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl$1.messageReceived(DefaultIoFilterChain.java:793)
     [java]     at org.apache.mina.core.filterchain.IoFilterAdapter.messageReceived(IoFilterAdapter.java:119)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain.callNextMessageReceived(DefaultIoFilterChain.java:434)
     [java]     at org.apache.mina.core.filterchain.DefaultIoFilterChain.fireMessageReceived(DefaultIoFilterChain.java:426)
     [java]     at org.apache.mina.core.polling.AbstractPollingIoProcessor.read(AbstractPollingIoProcessor.java:638)
     [java]     at org.apache.mina.core.polling.AbstractPollingIoProcessor.process(AbstractPollingIoProcessor.java:598)
     [java]     at org.apache.mina.core.polling.AbstractPollingIoProcessor.process(AbstractPollingIoProcessor.java:587)
     [java]     at org.apache.mina.core.polling.AbstractPollingIoProcessor.access$400(AbstractPollingIoProcessor.java:61)
     [java]     at org.apache.mina.core.polling.AbstractPollingIoProcessor$Processor.run(AbstractPollingIoProcessor.java:969)
     [java]     at org.apache.mina.util.NamePreservingRunnable.run(NamePreservingRunnable.java:64)
     [java]     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
     [java]     at java.lang.Thread.run(Thread.java:679)
     [java] Caused by: org.hibernate.exception.ConstraintViolationException: Could not execute JDBC batch update
     [java]     at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:94)
     [java]     at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
     [java]     at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:275)
     [java]     at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:266)
     [java]     at org.hibernate.engine.ActionQueue.executeActions(ActionQueue.java:168)
     [java]     at org.hibernate.event.def.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:321)
     [java]     at org.hibernate.event.def.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:50)
     [java]     at org.hibernate.impl.SessionImpl.flush(SessionImpl.java:1027)
     [java]     at org.hibernate.impl.SessionImpl.managedFlush(SessionImpl.java:365)
     [java]     at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:137)
     [java]     at org.hibernate.ejb.TransactionImpl.commit(TransactionImpl.java:54)
     [java]     ... 29 more
     [java] Caused by: org.h2.jdbc.JdbcBatchUpdateException: Referential integrity constraint violation: "FK27A9A59E619A0: PUBLIC.TASK FOREIGN KEY(CREATEDBY_ID) REFERENCES PUBLIC.ORGANIZATIONALENTITY(ID)"; SQL statement:
     [java] update Task set allowedToDelegate=?, taskInitiator_id=?, priority=?, activationTime=?, actualOwner_id=?, createdBy_id=?, createdOn=?, documentAccessType=?, documentContentId=?, documentType=?, expirationTime=?, faultAccessType=?, faultContentId=?, faultName=?, faultType=?, outputAccessType=?, outputContentId=?, outputType=?, parentId=?, previousStatus=?, processInstanceId=?, skipable=?, status=?, workItemId=? where id=? [23002-124]
     [java]     at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1082)
     [java]     at org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:70)
     [java]     at org.hibernate.jdbc.AbstractBatcher.executeBatch(AbstractBatcher.java:268)
     [java]     ... 37 more
----

I'll try to see what are the differences between the two accounts.

=== 2011-09-15

So the problem is that the underlying h2 database does not contain an entry for
the `admin` user. Asked on IRC (#jbpm, irc.codehaus.org), the conclusion was
that this is a bug, created JIRA ticket:
https://issues.jboss.org/browse/JBPM-3356

In the meantime, I created a user `john` on the Alfresco server so I can
progress further.

I added code to be able to specify a workflow server url in the extension, with
that it's now possible to get a list of documents from the assigned task list.

The next step can be an extra checkbox on the save dialog to complete such a
task.

=== 2011-09-16

In ULX. Trying to add a checkbox to the save dialog that is unchecked and
disabled when not connected to a workflow server. I got a strange exception
during getting the workflow handler, so I looked up documentation on how can I
debug an extension from eclipse.

The extension part is described here:
http://wiki.services.openoffice.org/wiki/Java_and_OpenOffice.org#How_do_I_debug_Java_components_in_OpenOffice.org.3F

The Eclipse part is here: http://cedric.bosdonnat.free.fr/wordpress/?p=57

With that, I now have a workflow view in the file picker (when a workflow
server is configured), and I can also select if I want to complete the workflow
task when I save. -- It's unchecked and disabled when there is no workflow.

We discussed with Ivan, and decided that a process instance will "lock" a
document, so multiple processes can't own the same document.

The next step is to deal with decisions. Created a `Decision.bpmn` that
contains a human task, then a gateway that branches based on that human task.
That first task in the BPMN contains a form with two buttons and that sets the
`decision` string to `accept` or `reject`.

Once I had such a BPMN, I could see how to make a decision via the GWT console,
then I added support for this in the extension as well.

=== 2011-09-17

Did the tests requested by Gabor: on Linux x86_64 (Frugalware 1.5) and Windows XP 32bit (in kvm).

- OOo 3.3 on Linux is fine (that's what I develop for nowadays, as later relases are at the moment backwards-compatible)
- LO 3.4 on Linux: based on quick testing -- fine
- OOo 3.3 on Windows: does not work, I hit the issue described here: http://wiki.services.openoffice.org/wiki/Extensions_trouble_shooting
- LO 3.4 on Windows: based on quick testing -- fine

In all cases I used the official upstream binaries, either from Oracle or from TDF.

There was an issue with LO on Windows: adding a new server was not possible
till I increased the height of the window, but that's now fixed in SVN.

Did a change requested by Ivan: now files from the document server are
accessible, even if there is a workflow server connected. This is solved by a
new 'workflow' button which can list assigned documents. When there is a
workflow server, this view is the default -- when there is no workflow, then
the workflow button is disabled. I also added tooltips to the buttons, since
now there are 6 of them and just the 16x16px buttons are not that intuitive.

Version to test: lpsp-0.1-443-gc44534e.oxt

=== 2011-09-18

Looked at more related work. This time I did not search papers, but products.
First I had a look what Sharepoint supports. Introduction article:

http://office.microsoft.com/en-us/sharepoint-designer-help/create-a-workflow-HA010100591.aspx

First, I wasted time with installing Visual Studio Express on the client
machine (as it was mentioned as a dependency of 'Windows Workflow Foundation'),
already having Office, but later turned out that what I need is 'SharePoint
Designer 2007'. It's freely available here:

http://www.microsoft.com/download/en/details.aspx?id=21581

Here is a simple example, sending notifications to users when an item assigned to them is created or changed:
http://office.microsoft.com/en-us/sharepoint-designer-help/workflow-example-send-a-notification-message-HA010182908.aspx

There is still a lot of features to explore, so I don't declare 'checking
sharepoint' as done yet.

== 3rd week

=== 2011-09-19

Continuing Sharepoint evaluation. One problem I hit is that first I installed a
Hungarian Sharepoint Designer and that's a problem, as the translations are not
so trivial and the howtos are in English. Reinstalling English now.. :)

Once it's installed, it requires an updated .NET 3 framework (part of it is
Windows Workflow Foundation), it can be installed easily using the URL the
software provides.

Then I created my very first workflow, following this tutorial:

http://office.microsoft.com/en-us/sharepoint-designer-help/workflow-example-send-a-notification-message-HA010182908.aspx?CTT=3

Before I could test it, I had to configure outgoing email, as described here:

http://technet.microsoft.com/en-us/library/cc263462%28office.12%29.aspx

( What is not described there: the SharePoint Central Administration Web site
is at http://vmiklos-sp:31120/default.aspx )

Now everything looks fine, except that I don't get the email. I'll figure out
what's the problem tomorrow.

=== 2011-09-20

Continuing of the evaluation of Sharepoint/Word.

OK, after a few debugging, it turns out there were two problems:

- there is an internal sharepoint user called 'admin', while the one I'm
  logging in is 'Administrator', and they are not the same. When changing the
  workflow to 'Administrator', the server tries to send an email
- I had to configure the firewall of the host machine to accept SMTP
  connections from the virtual machines

With that, I have a working sharepoint workflow example! :)

(The workflow model consists of 3 files, they are in SVN.)

Now that I have a clue how a workflow looks like in Sharepoint, I looked up
what usecases does it support:

- http://office.microsoft.com/en-us/word-help/manage-the-document-approval-process-using-a-workflow-HA010220203.aspx
  document approval process; supported features: approve, reject, reassign, request a change (for a group of decision makers)
- the Workflow feature of Word supports three use cases: approval, review, collecting signatures
- each use case supports a set of actors, messsage to the actors and a deadline
- the input of reassign or request change is an other actor and a deadline
- the whole history of the workflow is saved and can be viewed later

(The whole workflow process can only be started when the sharepoint server is a
trusted site, but that doesn't require https, if the site is a trusted one in
Internet Explorer.)

And that's it, as far as I see the user interface in Word doesn't really
support anything else (workflow-related).

It seems it does not support the followings:

- decoupling of the document and workflow server
- document masking
- standard workflow format (such as BPMN)

=== 2011-09-21

In ULX. Eclipse (the one that I use for extension development) once again
crashed, leaving a workspace behind that can't be loaded. (At least I gave up
recovering it after an hour.) The plugins are not installed in the workspace,
so no reinstall is needed, but configuring paths is necessary. Here are the
ones I use (it always take time to figure out):

- Path to SDK: /home/vmiklos/documents/bme/diploma1/ooo33-64/opt/openoffice.org/basis3.3/sdk
- Path to OOo installation: /home/vmiklos/documents/bme/diploma1/ooo33-64/opt/openoffice.org3

An other breakage: JBoss startup seems, to hang, in the log there are messages like:

----
Caused by: java.lang.NoClassDefFoundError: org/jboss/threads/ArrayQueue
Caused by: java.lang.ClassNotFoundException: org.jboss.threads.ArrayQueue
----

Once I re-created the jbpm workspace, that got fixed as well. Checklist after
re-creating jbpm workspace:

- update eclipse.ini (by default the memory limit is too low for it)
- copy in workflow configs to sample/evaluation/src/main/resources/
- copy in jar files for each workflow to jboss-5.1.0.GA/server/default/lib/

With this, I have a working jbpm working environment again.

Poking group assignment. Here is a summary:

http://www.jboss.com/products/jbpm/docs/faq/#groupassignment

The workflow is that group tasks are claimed (converted to personal tasks), and
then completed or released.

First I implemented helper methods in the workflow handler (they access the
REST API of jbpm), then added user interface supports for the following
features:

- list group documents
- claim a document (take)
- release a document ("assign back")

=== 2011-09-22

Wrote up a more detailed sharepoint workflow analysis, sent it as an email.

Improved the 'Save As' dialog a bit: if you type `test` as filename and select
the doc filter, then it autocompletes the filename to `test.doc`.

Looked at Alfresco sharepoint module source code:

http://svn.alfresco.com/repos/alfresco-open-mirror/alfresco/HEAD/root/modules/sharepoint/amp/source/java/org/alfresco/module/vti/web/ws/CheckInFileEndpoint.java

Here the execute() method parses the pageUrl and comment fields from the soap
request, but ignores the CheckinType, that's why sharepoint checkins always
have the same type (the default is apparently 'major').

Version to test: lpsp-0.1-466-gc79bb46.oxt

=== 2011-09-23

I spent tonight with evaluation Alfresco's workflow support.

A good starting point is here: http://wiki.alfresco.com/wiki/Workflow

- it supports jbpm-jpdl (not the newer jbpm-bpmn2), also a newer 3.4.e introduces an own "activiti" engine for BPMN 2.0 support
- manual start of a set of predefinied workflows (as in Word) is possible using the web interface:

  * adhoc: Enables you to assign a task to a single user
  * group review & approve: Enables you to set up review and approval of content, assigning the workflow task to a single group
  * parallel review & approve: Enables you to set up review and approval of content, assigning the workflow task to multiple users.
  * pooled review & approve: Enables you to set up review and approval of content, assigning the workflow task to multiple users. One user can take ownership of the task at a time, completing it or returning it to the pool to be claimed by another user associated with the task.
  * review & approve: Enables you to set up review and approval of content, assigning the workflow task to a single user

( More here: http://www.alfresco.com/help/34/community/sharehelp/tasks/library-item-assign-workflow.html )

I've tried out the "review & approve" one, works as expected. During edit you
see the id of the workflow and using that id it's possible to see the history
of a workflow. Haven't figured out how to list all completed workflow, though.

Using jPDL3 (from jBPM3) it's also possible to define custom workflows, given
that I already spent time on jBPM5 already, I did not check this feature in
detail.

What I also wanted to check: does Alfresco support workflows in its Sharepoint
interface? It seems when opening a document from an Alfresco server in Word,
the Workflow menu item disappears, so that's not supported.

=== 2011-09-24

Installed liferay:
http://www.liferay.com/community/wiki/-/wiki/Main/Quick+Installation+Instructions
The version I've tried: liferay-portal-tomcat-6.0.6-20110225

Once the download and unzip is ready, the internal tomcat can be started. It
has a 'Document Library' feature, which is similar to the one Sharepoint and
Alfresco provides.

The Document Library publishes the contents via WebDAV, so basic file
operations (open, save) are simple from an external application as well. It
also supports versioning, document metadata. It seems advanced Sharepoint-like
actions like commit message during checkin is not supported.

Regarding workflow engine, it supports jBPM3 and Kaleo workflow engines:

http://www.liferay.com/web/jonas.yuan/blog/-/blogs/applying-workflow-on-any-assets-in-liferay-6

And a newer post:

http://www.liferay.com/web/juan.fernandez/blog/-/blogs/liferay-workflow-in-action

Given that Kaleo is the default, I wanted to try out that one. Unfortunately,
the necessary war file is not mirrored, and the only source (
http://liferay.cignex.com/palm_tree/book/0387/chapter09/kaleo-web-6.0.2.1.war )
is not reachable at the moment -- connection times out.

=== 2011-09-25

Then it turned out that the Kaleo engine is part of the default installation.

( Documentation for jBPM3:
http://www.liferay.com/community/wiki/-/wiki/Main/How+to+Set+Up+JBPM+with+Liferay
http://sourceforge.net/projects/jbpm/files/jBPM%203/jbpm-3.1.2/ )

There is a builtin sample for a simple review of document changes, I tried
that. It can be configured at 'Control Panel' -> 'Workflow Configuration'.
There I set 'Document Library Document': choosed 'Single Approver' instead of
'Default'.

With this, when a new version of the document is uploaded, it's possible to
'Submit as Draft' or 'Submit for Publication'. If the later is selected, the
status of the new version will be pending, also a new item in 'My Workflow
Tasks' appears in the 'Assigned to My Roles' section. (By default any
administrator has the role to review documents.) Once I choose 'Assign to Me',
it's moved to 'Assgigned to Me' and then choosing 'Approve' moves it to the
list of completed tasks.

The workflows here also have a 'Due Date' property, it's also possible -- as an
administrator -- to assign tasks to other users.

Needless to say, there are no Office integration in Liferay, except the WebDAV
interface.

Other possible example:

http://publib.boulder.ibm.com/infocenter/dmndhelp/v6r2mx/index.jsp?topic=/com.ibm.bspace.620.help.api.rest.doc/apis/wsprocessserver/index.htm

== 4th week

=== 2011-09-26

Worked on document masking. My idea is that a document can contain named
sections, and these names can be mapped to the workflow node names.

So given that:

- the document contains named sections (this is true in case of ODF documents,
  Word does not support them, so the document is imported with generated
  section names like 'Convert 1')
- the section names are the same as the document workflow node names

The task of the extension is to:

- make sure only the current section is editable (set everything else to protected)
- undo these changes before save
- hide the protect/unprotect actions from the user

First I read up on the sections UNO API:

- Introduction:
  http://wiki.services.openoffice.org/wiki/Documentation/DevGuide/Text/Text_Sections
- Relevant interfaces: XTextSectionsSupplier, XPropertySet, TextSection
- To iterate over sections: XIndexAccess, XNamed
- To let the document be unmodified after touching the protected sections: XModifiable

Detailed documentation about these interfaces can be found in the
http://api.libreoffice.org/[LibreOffice API Documentation].

=== 2011-09-27

Worked on bugfixes:

- the document was assumed to be part of a task when there were a workflow server available
- all sections was disabled when there was no matching section name (compared to active node name)
- fixed 'save as' when creating a new file and workflow server is configured
- fixed default directory when using 'save as' and workflow server was configured
- fixed 'save' to call 'save as' when the handled document is not yet saved to the document server

Version to test: lpsp-0.1-484-ge35aa3a.oxt

=== 2011-09-28

In ULX. Started working on the 'audit log' feature. The idea is:

- search what jbpm api can be used to check if the user is an admin (only they can look at audit logs)
- search what jbpm api can be used to retrieve already completed workflows
- once a completed workflow is selected, a dialog similar to the document version history could describe the workflow history (columns: when, who, where did what)

It seems the process history is problematic on jBPM 5.1 at the moment:
http://community.jboss.org/thread/152989

Relevant JIRA tickets:
- https://issues.jboss.org/browse/BPMC-68
- https://issues.jboss.org/browse/JBPM-3069

And indeed no HistoryService is mentioned during boot:

----
$ grep DiscoverServices jboss-5.1.0.GA/server/default/log/server.log
2011-09-28 09:39:03,607 INFO  [STDOUT] (main) 09:39:03,607 INFO  [DiscoverServices] beging searching for services ...
2011-09-28 09:39:03,932 INFO  [STDOUT] (main) 09:39:03,932 INFO  [DiscoverServices] checking ErraiApp.properties for configured types ...
----

Digging deeper, it prints where does it search for services:

----
2011-09-28 15:02:25,026 INFO  [STDOUT] (main) 15:02:25,026 INFO  [ConfigUtil]  -> /home/vmiklos/documents/bme/diploma1/jbpm/jbpm-installer/jboss-5.1.0.GA/server/default/deploy/jbpm-gwt-console.war/WEB-INF/classes
----

in that WEB-INF folder, there is a lib folder as well, If I copy
jbpm-console-integration-4.4.jar there (which is for jBPM4, and provides
HistoryService), then I get:

----
2011-09-28 15:29:46,184 INFO  [STDOUT] (HDScanner) 15:29:46,184 INFO  [DiscoverServices] discovered service: org.jbpm.integration.console.services.HistoryService
2011-09-28 15:29:46,189 ERROR [STDERR] (HDScanner) com.google.inject.internal.ComputationException: com.google.inject.internal.ComputationException: java.lang.NoClassDefFoundError: Lorg/jbpm/api/ProcessEngine;
----

so it finds the service, but can't load it - the NoClassDefFoundError is due to
the depend on jBPM4.

Read the history chapter of the jBPM5 doc: http://docs.jboss.org/jbpm/v5.1/userguide/ch07.html#d0e2836

Then I had the chance to talk to krisv on IRC (main developer of jBPM), he confirmed:

----
17:00 < krisv> vmiklos: the history view is not (yet) supported in jBPM5
17:01 < krisv> vmiklos: there is a history log (as just by the process instance management and reporting parts), but the generation of a history view is not implemented
17:02 < vmiklos> krisv: uhm, so the best if i log it to some sql, then access sql directly, instead of using the rest api?
17:02 < krisv> vmiklos: the logging is already done if you configure a history logger, the REST api for history just doesn't work
17:03 < vmiklos> ok, thanks
17:04 < krisv> vmiklos: if you want to contribute the HistoryService? ;)
----

He also gave a few source code pointers:

- the old jBPM4 code that isn't ported to jBPM5: http://anonsvn.jboss.org/repos/jbpm/jbpm4/trunk/integration/console/src/main/java/org/jbpm/integration/console/services/
- jBPM5 code that logs history data: https://github.com/droolsjbpm/jbpm/blob/master/jbpm-bam/src/main/java/org/jbpm/process/audit/ProcessInstanceDbLog.java

Discussed with Ivan: I'll first work on starting new workflows, as the rest api
supports that already, then once I'm ready with that, I'll look into the above,
ideally should not take more than a week to implement.

=== 2011-09-29

Started work on creating new workflow instances from the user interface. First,
this needs changes to the workflow definitions, so the URL of the document is a
parameter of the workflow. Steps to achieve this:

- read documentation, figured out that in case a hu.ulx.foo.ftl is in the class
  path (where hu.ulx.foo is the ID of the workflow), then that makes it
  possible to fill a form when the workflow starts, so the workflow can have
  parameters.
- next, I modified the bpmn to use the URL input parameter instead of
  hardwiring one in the BPMN definition.

Examples for such an URLs:

http://192.168.122.187:7070/alfresco/SPP/documentLibrary/hello.txt
http://192.168.122.187:7070/alfresco/SPP/documentLibrary/documentmask.odt

Next question is how to start such a workflow from API. The
`/rs/form/process/$id/complete` REST API can be used for this, the input
parameters of the workflow has to be sent to that address as a POST request.
(`$id` has to be replaced by the id of the process definition, part of the BPMN
file, typically hu.ulx.foo)

Based on this, I could implement a `WFHandler.startProcess()` method in the
workflow library, that can be used from the UI.

Related: how to pretty-print json output? Here is a sample:

-----
cat test.json | python -mjson.tool > out.json
----

Finally, how to get a list of process definitions? `/rs/process/definitions`
can do that, it returns the result in json.

After creating the entity classes for a process and a set of processes, I could
implement a `WFHandler::getProcessDefinitions()` method, that can be called by
the UI.

=== 2011-09-30

In ULX. Worked on the UI of workflow start. Steps:

- created an UNO interface idl for the workflow dialog
- created an UNO service idl, implementing the interface
- created a BASIC function calling the UNO service
- created a WorkflowImpl, implementing the UNO interface

Also added a few checks before starting a workflow:

- a connection must be available
- a document must be opened
- the document must not be associated to a workflow already

I used the "usual" error handling here: just throwing an exception, then from
BASIC the ErrorReason property of the Workflow service can be queried for the
localized error message.

Then created a Swing dialog for choosing the workflow to start:

- created a StartWorkflowDialog class
- let WorkflowImpl use StartWorkflowDialog

The other big task for today: set up jBPM4, so I can see how HistoryService
worked. Got the release archive at: http://sourceforge.net/projects/jbpm/files/jBPM%204/jbpm-4.4/

According to readme.html, a demo setup can be created using:

----
cd install; ant demo.setup.jboss
----

Given that jBPM5 is already running on my laptop, I put jBPM4 to a virtual machine, but it listens on localhost only by default. To change that, the

----
<property name="bind.address" value="localhost" />
----

line should be changed in `build.xml` to "0.0.0.0".

With that, the jBPM4 console is available at

http://192.168.122.219:8080/jbpm-console/

According to the doc, a possible user/pass is `alex` / `password`.

Next, I searched a BPMN process definition with Human Tasks. One is under
`examples/src/org/jbpm/examples/bpmn/task/usertask/taskform`. I opened that
BPMN in Eclipse, but all it could import is the start node... So I read the
process definition manually. It seems it contains two group tasks, the first
can be claimed by mary, the second by peter. When I log in with mary, I can
claim the task, but when I would complete it, it asks for a user / password and
there it does not accept mary / password...

Finally I gave up and reinstalled jBPM4 with mysql:
http://www.mastertheboss.com/jbpm/184-jbpm4-tutorial.html

(The mysql script wanted to use `type=InnoDB`, today's mysql wants `engine=InnoDB`.)

At the end of the day, after spending half a day trying to set up jBPM4, Ivan
told me that jBPM4 was never supported, so in case something goes wrong, it
does not really worth wasting time on it.

=== 2011-10-01

So given that I had no luck with jBPM4, I'm now giving jBPM3 a short try, to
see if it had a working HistoryService (+ rest api to it), and if yes, how did
that work.

Downloaded jbpm-jpdl-suite-3.2.GA.zip from SourceForge, then unpackaged.
Started with:

----
cd jbpm-jpdl-3.2.GA/server/bin; ./run.sh -c jbpm
----

Documentation:

- http://community.jboss.org/wiki/JBPM3GettingStarted
- http://www.java.net/node/664522

I did not find anything REST-related, will try to search more tomorrow.

=== 2011-10-02

So searched a bit more and it turns out that's a new feature in 3.3:

http://www.mastertheboss.com/jbpm/170-restful-web-services-with-jbpm-gwt-console.html

It's available here:

http://en.sourceforge.jp/projects/sfnet_jbpm/downloads/jBPM%203/jbpm-jpdl-3.3.1.GA/jbpm-installer-3.3.1.GA.jar/

The installer seems to be a bit crazy: it forces me to point to a JBoss dir,
but later it downloads its own. Anyway, I already had a JBoss 5.1 from jBPM5,
so I made a copy of it and pointed at that one.

The mastertheboss.com then tells how to initialize the db, the trick from
Friday is necessary here as well (the .sql script should be updated:
s/type=InnoDB/engine=InnoDB/g).

So the installer downloaded jboss 5.0.0, but deployed to the one I set, making
the jboss download a bit pointless. As a consequence, once I started:

----
cd jbpm3-jboss/bin; sh run.sh
----

It started a jBPM3, serving a rest api at http://localhost:8080/gwt-console-server/ !

Sadly I see nothing history-related there yet -- and no HistoryService in the log, either.

So, my conclusion so far is to stop digging earlier versions, and:

- configure jbpm5 with mysql
- see what data gets stored
- if that's not enough, add more loggers
- provide rest api for that, and don't yet care if that api will be fine for jbpm-console or not

== 5th week

=== 2011-10-03

Building jBPM5 from source to be able to hack it. A howto:
http://www.plugtree.com/building-jbpm5-from-source/

First I got a build failure, asked on IRC if this is a known issue, it turned
out that it is. So instead of building the 'master' branch, I tried 5.1.x (I
used the 5.1.0 binary so far):

----
git checkout --track origin/5.1.x
----

Given that tests failed on that branch as well, I finally built using:

----
mvn install -DskipTests
----

(Still need to test if this is enough for the "I modify the source code and can
test the binary" scenario, but hopefully yes.)

The other goal I wanted to reach today is to set up jbpm5 with mysql.

A helpful thread: http://community.jboss.org/thread/164547 - but it does not
talk about how to create a mysql schema.

And yes, finally I have 30 tables in mysql! :)

=== 2011-10-04

Trying to figure out how the history of a workflow is stored in SQL. The
example is the Decision workflow, where it's started, a decision is made,
finally someone else does the actual accept / reject (and the workflow ends).

- start / end time is available in the `ProcessInstanceLog` table:

  * `processInstanceId` is the id of the current instance (key)
  * `START_DATE` is the start of the process
  * `END_DATE` is the end of the process (if finished)
  * `processId` is the name of the process definition (hu.foo.bar)

- the `Task` table contains the human task parts of the workflow:

  * `id` is the key
  * `createdOn` contains the date
  * `processInstanceId` contains which process the task belongs to
  * `actualOwner_id` contains the user completing the task
  * variables: `outputContentId` -> `Content` table, `content` column

- the `NodeInstanceLog` table contains the nodes visited during the process:

  * `processInstanceId` - the current node instance is part of which process instance
  * `nodeId` - the node definition id
  * `LOG_DATE` - when the entry is created

So it seems (let's say) enough information is logged, the problem is the lack
of REST API.

As a first step, I want to add support for listing completed process instances.
Not completed ones can be get using, for example:

http://localhost:8080/gwt-console-server/rs/process/definition/hu.ulx.decision/instances

A similar

http://localhost:8080/gwt-console-server/rs/process/definition/history/hu.ulx.decision/instances

could export info about the completed ones.

For that, I got the console sources from:

----
git clone git://github.com/bpmc/bpm-console.git
cd bpm-console
mvn install
----

This went fine (tests passed). The next question is how to get jbpm to use my
bpm-console, since it's jbpm that builds the
jbpm-gwt-console-server-$version.war.

I edited the .pom file to use the SNAPSHOT version of the console I built, but
without success, now JBoss does not start.

So I checked which is the good console that works, at it turned out to be the
an older version, which is in svn:

http://anonsvn.jboss.org/repos/soag/bpm-console/tags/bpm-console-2.1/

Which is a maven project, which tries to download build-depends from
http://repository.jboss.org/maven2, which is already removed...

And yes, when I check carefully how bpm-console is integrated to the jbpm war
files, there is this line in the build log:

http://repository.jboss.org/nexus/content/groups/public/org/jboss/bpm/gwt-console/2.1/gwt-console-2.1-jbpm.war

So it just downloads the binary, does not compile it. (Even for a new jBPM release.)

=== 2011-10-05

In ULX. Also checked that bpm-console from svn (and not git-svn) fails.

Restored my installation to the state before two days ago, when it
were properly logging to mysql and had working diagrams with official
jBPM-5.1.0 binaries (I overwrote jars here and there while experimenting).

Discussed with Gabor: several small (or not so small) usability requests,
appended to TODO.

Discussed with Ivan: accessing SQL directly is acceptable, though in case we
can get gwt-console-2.1 to build, that would be even better.

Worked on GNOME integration, reference on how to detect GNOME presence:

http://opengrok.libreoffice.org/xref/core/vcl/unx/generic/desktopdetect/desktopdetector.cxx#58

Spent time with setting up GNOME test environment to verify.

Version to test: lpsp-0.1-512-g89ce9dd.oxt

Back to bpm-console, found the developer forum:

http://community.jboss.org/en/gwtconsoles

And there a helpful thread: http://community.jboss.org/thread/152160

With that, bpm-console-2.1 builds! :)

=== 2011-10-06

*Building droolsjbpm-build-bootstrap*

Worked on creating the jbpm installer from source, so I can test my modified
bpm-console-2.1.

The document containing the basics:

https://github.com/droolsjbpm/droolsjbpm-build-bootstrap/blob/master/README.md

So I cloned all the repos to $HOME/git/droolsjbpm, built, then ran `ant
install.demo` in $HOME/git/droolsjbpm/jbpm/jbpm-installer. It tried to download
snapshots files from sourceforge, which all failed, so I copied each necessary
file from $HOME/.m2 (maven output) to jbpm-installer/lib.

The only workaround I needed was that I have no idea how to produce
jbpm-5.1.2-SNAPSHOT-eclipse-all.zip, copied jbpm-5.1.0.Final-eclipse-all.zip
instead. (But that's not really interesting, I don't want to hack the Eclipse
integration.)

Once this was done, I ran `ant start.h2 && ant start.jboss` and the previously
mentioned new `/rs/process/definition/history/hu.ulx.decision/instances` path
returned a hello world! :)

So slowly, but I completed the source code -> testable binary path, using:

- bpm-console from svn tag "2.1"
- droolsjbpm from git (using the recommended `droolsjbpm-build-bootstrap/script/git-checkout-all.sh 5.2.x 5.1.x` command)

*Incremental build*

The next step is to figure out what actions are necessary for an incremental
build (when I just change a few files in bpm-console). Here they are:

- 1) cd $HOME/git/bpmc/bpm-console-gitsvn
- 2) hack hack hack
- 3) mvn install -DskipTests # produces $HOME/.m2/repository/org/jboss/bpm/gwt-console-server/2.1/gwt-console-server-2.1-jbpm.war
- 4) cd $HOME/git/droolsjbpm/jbpm/jbpm-gwt; mvn -DskipTests install # produces $HOME/.m2/repository/org/jbpm/jbpm-gwt-console/5.1.2-SNAPSHOT/jbpm-gwt-console-5.1.2-SNAPSHOT.war
- 5) cd $HOME/git/droolsjbpm/jbpm/jbpm-distribution; mvn -DskipTests install # produces target/jbpm-5.1.2-SNAPSHOT-gwt-console.zip
- 6) cp target/jbpm-5.1.2-SNAPSHOT-gwt-console.zip $HOME/git/droolsjbpm/jbpm/jbpm-installer/lib
- 7) cd $HOME/git/droolsjbpm/jbpm/jbpm-installer; ant install.demo
- 8) ant stop.jboss; ant start.jboss

The `bpm-console-to-jboss.sh` does steps 3)..7) in one go. (Takes about 3 mins here.)

*Eclipse*

http://eclipse.org/m2e/ provides Eclipse integration for maven projects, so now
I can hack bpm-console in Eclipse.

At the end of the day, I implemented a new rest method that lists all process
instances, not just the active (not finished) ones. More to come! :)

=== 2011-10-07

In ULX. Still working on /rs/process/definition/history/$id/instances - trying
to figure out how can I hack the org.jbpm.process.audit package, which contains
the actual SQL(-like) commands t access the db tables. In this particular case
I want to add a method that returns completed process instances *only*.

Adding a new ProcessInstanceDbLog.findInactiveProcessInstances() method is
trivial, but somehow I still get a

----
org.jboss.resteasy.spi.UnhandledException: java.lang.NoSuchMethodError: org.jbpm.process.audit.ProcessInstanceDbLog.findInactiveProcessInstances(Ljava/lang/String;)Ljava/util/List;
----

The solution was that jbpm-gwt depends on jbpm-bam, so the later should be built first.

With this, /rs/process/definition/history/$processId/instances exports exactly the
already finished processes!

Next, I want to add rest api to get the node instances of a process instance. The control flow could be:

- ProcessMgmtFacade.getCompletedNodes() is called via REST, calls
- ProcessManagement.getNodeInstances() [ interface in gwt-console-server-integration ], calls
- ProcessManagement.getNodeInstances() [ implementation in jbpm-gwt-core ], calls
- CommandDelegate.getNodeInstanceLogsByProcessInstanceId(), calls
- ProcessInstanceDbLog.findNodeInstances(), which interacts with hibernate [ already available ]

For that, the following DTO classes are used:
- NodeInstanceLog (used by hibernate) [ already available ]
- NodeInstanceRef (used by the json serializer)
- NodeInstanceRefWrapper (collection of NodeInstanceRef, used by json)

Once I designed NodeInstanceRef and NodeInstanceRefWrapper, I could extend the
ProcessManagement interface and add the missing 3 methods from the above list.

With this, /rs/process/history/$processInstanceId/nodes exports the visited
nodes of a process instance.

Currently exported attributes:

- date
- id (read: nodeInstanceId)
- nodeId

The SQL ideally also stores type (according to NodeInstanceLog.java, it's
TYPE_ENTER/TYPE_EXIT), but need to check their actual values, so I spent time
with configuring the compiled-from-source jBPM instance to use mysql as well.

Finally I wanted to include the node names in the json output, but for some
reason they don't show up, need to debug later.

=== 2011-10-08

The "can't convert node ID's to node names" problem is now solved, it was described here:

https://issues.jboss.org/browse/JBPM-3273

After asking on IRC, krisv fixed it:

https://github.com/droolsjbpm/jbpm/commit/0c65ca029b8ac7d5110bce8be45ab167510f6642

And once I cherry-picked that commit to my repo, node names started to show up
in the json output as well.

The next target is to have a /rs/process/history/$processInstanceId/tasks,
which lists tasks of a processinstanceid.

First I planned this control flow:

- ProcessMgmtFacade.getTasks() is called via REST, calls
- ProcessManagement.getTasks() [ interface in gwt-console-server-integration ], calls
- ProcessManagement.getTasks() [ implementation in jbpm-gwt-core ], calls
- CommandDelegate.getTasksByProcessInstanceId(), calls
- ProcessInstanceDbLog.findTasks(), which interacts with hibernate

For that, the following DTO classes would be used:
- Task (in org.jbpm.process.audit, used by hibernate)
- TaskRef (used by the json serializer) [ already available ]
- TaskRefWrapper (collection of TaskRef, used by json) [ already available ]

But this turned out to be problematic, since then jbpm-bam's ORM would conflict
with jbpm-human-task's ORM.

While I was at it, a reference about hibernate vs Java types:

http://www.java2s.com/Code/Java/Hibernate/JavaTypeVSHibernateType.htm

Second try involved the following steps:

- TaskListFacade: new method getTasksForProcessInstance(), calling
- TaskManagement (interface): new method getProcessInstanceTasks(), implemented by
- TaskManagement (implementation): new method getProcessInstanceTasks(), calling

  * instantiates a new BlockingGetTasksResponseHandler class, implementing
  * a new GetTasksResponseHandler interface

- TaskClient: new method getTasksByProcessInstanceId(), calling

  * using two new constants (QueryTasksByProcessInstanceId and QueryTasksByProcessInstanceIdResponse), provided by CommandName

- TaskServerHandler: handles the new QueryTasksByProcessInstanceId token, calling
- TaskServiceSession: new getTasksByProcessInstanceId() method, calling

  * invoking a new stored procedure TasksByProcessInstanceId (defined in src/main/resources/META-INF/orm.xml of the jbpm-human-task project), doing a
  * `select * from Task where processInstanceId = ?` SQL query

- TaskClientHandler: handles the new QueryTasksByProcessInstanceIdResponse token (which then invokes the response handler, and the rest is trivial)

and that works - as an extra success, I even get the task name for a task id, which was not in SQL. :)

=== 2011-10-09

Set up Alfresco and jBPM5 on the bam-devel (root@172.16.10.8) virtual machine, as requested by Ivan.

Implemented support for audit log in the workflow library, by adding the following methods:

- getHistoricProcessInstances()
- getHistoricNodeInstances()
- getHistoricTasks()

The user interface (uno interface idl, uno service idl, menu entry, java impl,
java dialog) part is not yet ready.

== 6th week

=== 2011-10-10

Worked on the UI of getHistoricProcessInstances():

- menu entry
- uno idl interface
- uno idl service
- java uno implementation
- java swing dialog

=== 2011-10-11

Finished the UI of the audit log:

- listing tasks of a process instance is now possible
- listing node instances of a process instance is now possible

=== 2011-10-12

Hacked on the plane, looked at the "non-workspace folder creation" feature,
requested by Gabor. It seems MSO can't create subfolders on an Alfresco server,
then tested the same scenario with MSO + Sharepoint, but the result is the
same: no way to create subfolders from Office. OTOH, an API is mentioned here:

http://msdn.microsoft.com/en-us/library/ms774480%28v=office.12%29.aspx

Using that, I could implement support for this in the proto. Then I tested this
with Alfresco, and it turns out even they implement this API!

So I implemented the call of this api in the proto, sharepoint lib and finally
the user interface as well. As a result, the extension wanted to use the
deleteSpace() method even on folders. For now I just added detection for this
(so when delete is pressed on folders, nothing happens), but a DeleteFolder is
available:

http://msdn.microsoft.com/en-us/library/ms772957%28v=office.12%29.aspx

So I want to add support for this tomorrow.

=== 2011-10-13

Implemented deleteFolder() in the sharepoint lib and on the user interface. The
toplevel folders are a special case:

- creating them is already disabled in the UI
- deleting them was handled as a folder deletion so far

I now added the same check for deletion as well, so that the UI does not allow
deleting toplevel folders (if that's wished, the whole DWS should be deleted.)

== 7th week

=== 2011-10-17

Worked on the 'skip documentLibrary level' feature:

- the 'getParent' operation now skips it
- the 'selectRemotePath' operation now skips it

Though this feature is not yet configurable. I plan to add support for:

- having a per-server default (skip by default)
- having a checkbox in the file open dialog

=== 2011-10-18

Hacked on the plane, added per-server config option to skip toplevel dirs (skip
by default):

- added new type to the config XML
- read the setting in ConfigServerDialog
- read and write the setting in ServerDialog
- map the setting to an UNO attribute in ConnectionImpl

=== 2011-10-19

In ULX. Added the 'skip toplevel directories' checkbox to the file picker, so
the saved setting is just a default now.

Had a look at the search feature. There is no such feature in Microsoft Word
out of the box, but can be configured to search on a sharepoint server:

http://workerthread.wordpress.com/2008/11/28/sharepoint-search-from-office-applications/

Given that Alfresco does not support search.asmx and this is not related to the
thesis, we discussed with Gabor that I should not implement this yet.

Then worked on better checkout/in feature:

- now the document is checked out during file open, not right before save
- there is a new checkbox during file open to determine if the document should be checked out
- the save dialog disables the checkin type + checkin comment controls when the document was not checked out

=== 2011-10-20

Worked on adding the 'check out document' default configurator to the server
config dialogs.

Also made the "is checked out" attribute specific to each document, as it was
specific to each server so far.

Finally fixed the following the problem: when the document was saved, it was
checked in, and next time the save tried to check it in again, but it wasn't
checked out. OTOH, just checking it out after a checkin isn't working, either:
then a save-then-close scenario would leave the document checked out.

The solution I implemented is that there is a new checkbox in the save dialog,
that is deselected by default: the user should select it if she wishes to
continue editing the document (with a lock) after checkin.

=== 2011-10-21

In ULX. Worked on better handling of opening already checked out documents:

- First, if we try to checkout (lock) and fail, now there is a question to open
  without checkout or ignore.

- Second, I want to detect already locked documents during non-locked opens.
  For that, selectRemotePath() should also return the lock info. Once that was
  implemented, I could add a warning on open.

Then worked on improving saving locked-by-others documents, so now a dialog
appears, asking if the user wants to try again or it offers save-as. (This part
took some time to implement, as I screwed up the frame parents across dialogs
and that resulted a hard-to-debug UI freeze.)

I also noticed a bug: when toplevel directories are skipped, then save as saves
to the wrong directory.

=== 2011-10-22

Worked on the detailed view in the file picker. The first target is to display
the following columns:

- Type
- Name
- Modified by
- Modified

This is what Sharepoint provides by default and I verified Alfresco provides
these as well.

So the detailed view can be solved with a custom renderer that implements
multiple columns. Once that's there, I had the following tasks:

- add missing header [done]
- implement icons for folders/files [done]
- change scrolling (avoid horizontal scrolling in detailed view) [done]
- add buttons to switch between the two renderer [done]
- change the sharepoint lib to parse the new columns from the server [not yet done]

=== 2011-10-23

Worked on improving the sharepoint lib to dynamically pick up any column
provided by the server for the detailed view. This was especially important
because it turned out even the basic 4 columns were not the same on Alfresco
and Sharepoint ('Modified By' vs 'Modified by').

The hard part here is that the number of columns change runtime (for example
root folders can't be checked out) but the list renderer class can't change the
layout after the constructor ended.

Needless to say, once I reinitialized the renderer before each directory
listing, the issues went away.

== 8th week

=== 2011-10-24

Fixed save-as when the skip toplevel dirs feature was enabled. The problem was
that the directory skip feature worked under the scenes, and because of that,
save as saved to wrong dir. Now there is a string pointer (erm, Java calls it
StringHolder) to return the absolute path from the lib.

Also fixed bug when creating dirs right under skipped toplevel folders was not
possible. It was a similar problem, the folder create/delete checks now read
the absolute path, which fixes the issue.

Finally worked on updating the Hungarian translation, introduced lots of
String.format() to make translatable strings reasonable.

Useful commands to convert between properties and po files:

----
prop2po messages.properties messages.pot # prop -> pot
msgmerge -o hu.new.po hu.po messages.pot && mv -f hu.new.po hu.po # pot + outdated po -> up to date po
<translate>
po2prop -t messages.properties hu.po messages_hu.properties # po -> prop
----

Version to test: lpsp-0.1-621-g29a8894.oxt

=== 2011-10-25

Spent time with reading UNO API docs on how to get the user config dir, it
turns out I need the `com.sun.star.util.PathSubstitution` service. (So I can
place the log file there.)

Example on Linux:

----
~/.config/.openoffice.org/3/user/console.log
----

Then poked how can I log exceptions to both a log file and console. The
standard java.util.logging package supports this, the logger is initialized
when the 'authentication manager' singleton service starts (which is right
after the jvm starts). Modified ConnectionImpl and SPHandler to use the logger,
tomorrow I'll change the rest of the classes to avoid using e.printStackTrace
directly.

=== 2011-10-26

In ULX. Finished the logger, now all exceptions go though the logger which
outputs them to the logfile and to the console.

Looked up how to add padding to a button in GridBagLayout, for better UX.

Researched what is the situation with files without an extension. The
owssvr.dll interface has a FileDialogFilterValue parameter, which is currently
hardwired to `*.*` in the extension, so such files are not retrieved.

Looks like SharePoint does not handle such files correctly, if the filter is
just `*`, I get the list of directories, if the parameter is omitted, then I
get a HTTP 500.

Fixed a bug when save without checkin failed, but the UI reported that checkin
failed.

Gave a demo about the feature list I had at the start of the semester to Gabor,
Ivan & various other folks.

Version to test: lpsp-0.1-635-gd1939ce.oxt

=== 2011-10-27

Worked on catching the save event to offer a save to the document server.

First I did:

----
Object object = mContext.getServiceManager().createInstanceWithContext("com.sun.star.frame.GlobalEventBroadcaster", mContext);
XDocumentEventBroadcaster xDocumentEventBroadcaster = (XDocumentEventBroadcaster) UnoRuntime.queryInterface(XDocumentEventBroadcaster.class, object);
xDocumentEventBroadcaster.addDocumentEventListener(xListener);
----

But the problem is that way I get events for all the documents in the
xListener. A better approach is the XEventBroadcaster interface, which can be
specific to a document.

The idea is that the event listener is enabled by default, but it's disabled
just during the local save, when it's invoked from the extension menu. This way
I can catch local saves of the user, but still avoid an infinite loop.

Finally implemented the even listener itself, it waits for the event named
'OnSaveDone', then invokes the same uno method that is invoked by the basic
macro of the menu - so ctrl-s and Document Repository -> Save is now basically
the same for a user.

=== 2011-10-28

In ULX. Added support for having LPSP and OPAL installed at the same time. The
problem was that the extension still contained references to the old
fr.starxpert prefix, I've now updated those.

Fixed a bug with login to Alfresco in some cases:

https://forums.alfresco.com/en/viewtopic.php?f=48&t=26829

Evaluated how the deadline feature works in Sharepoint:

- when there is a deadline and the task is not finished, the assignee gets mailed
- the deadline is visible in Office button -> Server -> Tasks

Searched what does jbpm provide that results in the Deadline sql table:

- the semantics are the same as the WS-HT spec, available here:
  http://download.boulder.ibm.com/ibmdl/pub/software/dw/specs/ws-bpel4people/WS-HumanTask_v1.pdf
- section 4.6 talks about deadlines, the idea is that once a deadline expires
  and the wished state is not reached, then an escalation action is executed

That means WS-HT supports a more generic solution IMHO, but it has little to do
with the office integration.

Version to test: lpsp-0.1-674-gbbf5e8a.oxt

== 9th week

=== 2011-11-02

Consultation with Akos, discussed the outline of the thesis.

To ULX, need to ask Ivan if they have a case study about a company using
document based workflows where they need to keep the doc server and the wf
server in sync manually.

Here is a plan for the thesis with estimated length:

----
1. Introduction - 5 pages [ current: 5 pages ]
1.1 Document management
- introducing a document server, based on the VCS example
- client-server vs cloud-based office
1.2 Workflows
- what workflows are
- case study (explaining how live looks like without integrated document server + workflow support)
- motivation (brief list of needed features: making a decision, group assignment, etc)

2. Background - 30 pages [ current: 20 pages ]
2.1 Document management
2.1.1 General architecture of document management systems
- client-server model, operations on the client, on the server
- concept of workspaces
- office extensions / document server extensions
2.1.2 Related standards
- CMIS goals
- CMIS domain model
- CMIS services
2.1.3 Concrete implementations
- sharepoint vs alfresco comparison
- list of document server use cases
- openness of the sharepoint protocol
2.1.4 Differences to version control systems
- semantic differences
- difference in features
- difference in target audience
2.1.5 UNO compontents
- what is UNO, supported languages
- workflow of .idl -> .jar
- contents of an UNO component archive
2.2 Workflows
2.2.1 Application servers
- what is an application server / web application server
- java application servers
- jboss
2.2.2 Workflow engines
- what is a workflow engines
- using a workflow engine (embedded, external server)
- jbpm
2.2.3 Business Process Model and Notation
- what is business process modelling
- bpmn concepts, object types
- bpmn support in jbpm
2.2.4 Object-Relational Mapping
- hibernate usage in jbpm-human-task
2.2.5 The BPM Console
- technical overview, relation to jbpm
- workspace framework, GWT
- management capabilities: processes, tasks, reports 

3. Overview of the Approach - 15 pages
3.1 Document management
- architecture: how libreoffice, sharepoint relates to each other
- how the extension fits in this picture
- overview of the differences between our approach and OPAL
- state machine of a document
3.2 Workflows
- document server and workflow server decoupling
- staring workflows
- incremental snapshots
- group assignment
- release task
- document masking
- decisions in workflows
- audit log

4. Design - 20 pages
4.1 Document management
4.1.1 The SharePoint library
- design decisions (no server-side component, etc.)
- packages of the library
- brief description of each class
4.1.2 The UNO interfaces
- where do uno interfaces stand between the library and the UI (figure)
- description of uno interfaces
- description of provided uno services
4.1.3 User interface
- packages of the UI
- menu items, basic macros
- control flow of each basic macro -> uno interace -> java method
4.2 Workflows
4.2.1 The workflow library
- controller classes
- entity classes
- parser classes (and their constraints!)
4.2.2 BPM server and BPM console
- extending the BPM server
- extending the BPM console
- integration with the workflow library
4.2.3 User interface
- how the dialogs needed for document management are extended
- new dialogs (workflow start, audit log, etc)
- new uno interfaces + services

5. Implementation Details - 15 pages
5.1 Document management
5.1.1 The prototype
- why a prototype
- what does it implement (the protocol) and what not
5.1.2 External libraries
- httpcomponents
- tagsoup
5.1.3 User interface
- how the existing file picker got extended
- how the existing version dialog got extended
5.1.4 Exception handling
- exceptions in a multi-language environment (UNO)
- localization of error messages (why it's done in Java, and not later in basic)
5.2 Workflows
5.2.1 Authentication
- what authentication does jbpm use
- jbpm requests are stateless vs. logging in only once
5.2.2 JSON handling
- used library
- relation with existing entity classes
5.2.3 User interface
- how document properties are retrieved from the server ("is the document checked out?", etc.)
- how audit log is integrated
5.2.4 Error handling
- handling errors from existing services
- handling errors when the service is missing (jbpm server does not expose audit log, etc.)

6. Evaluation - 5 pages
6.1 Document management
- test architecture
- missing features
6.2 Workflows
- test architecture
- used test methods (commandline testing, integration test)
- limitations (refer to parser classes above)

7. Related Work - 5 pages
7.1 Document management
- comparision table
- products: opal, libreoffice cmis, sharepoint connector, drupal sharepoint module (new: add libcmis!)
7.2 Workflows
- related papers (see 2011-09-10)
- sharepoint bpm engine (see 2011-09-18)
- liferay (see 2011-09-24)

8. Conclusion and Future Work - 2 pages
- brief conclusion on the whole solution
8.1 Document management
- summary on what features are missing / what could be improved in existing features
8.2 Workflows
- not implemented ideas / what could be improved wrt. already implemented functionality
----

=== 2011-11-03

Updated outline based on suggestions from Akos.

Here is a plan for figures:

----
2. Background
2.1 Document management
2.1.1 General architecture of document management systems
- [done] architecture of a document management system
2.1.2 Related standards
- [done] architecture of the CMIS standard
2.1.5 UNO compontents
- [done] workflow of implementing an uno services in java
2.2 Workflows
2.2.2 Workflow engines
- [done, done] architecture of a workflow engine (two figures for embedded / client-server setup)
2.2.3 Business Process Model and Notation
- [done] bpmn concepts, object types, their relation -> multiple small figures needed, a sample bpmn is added for now
2.2.5 The BPM Console
- [done] architecture of the bpm console, relation to jbpm engine

3. Overview of the Approach
3.1 Document management
- [done] architecture of the approach
- [done] workflow / control flow of the approach
3.2 Workflows
- [done] architecture of the decoupled document/workflow server and office client
- [done] control flow of of the decoupled approach (what does what, when, where)

4. Design
4.1 Document management
4.1.1 The SharePoint library
- [done] package diagram
4.1.2 The UNO interfaces
- [done] technologies used in the design of the extension (and their relation)
4.1.3 User interface
- [done] class diagram of the user interface
4.2 Workflows
4.2.1 The workflow library
- [done] package diagram
4.2.2 BPM server and BPM console
- [done] jbpm class diagram about modified classes
4.2.3 User interface
- [done] class diagram of the workflow UI package

5. Implementation Details
5.1 Document management
5.1.3 User interface
- [done] screenshots showing the document management functionality (file/folder handling, version control)
5.2 Workflows
5.2.3 User interface
- [done] screenshots showing workflow features (decision making, audit log)

6. Evaluation
6.1 Document management
- [done] architecture of the document management test system
6.2 Workflows
- [done] architecture of the extension client + workflow server + document server test system
----

Few ideas for better figures
- use rounded boxes for processes, normal boxes for artifacts
- pastel fill colors:

  * yellow: f9feca
  * red: f4d5d6
  * green: c0e2c5
  * blue: e6e6ff
  * grey (container): eff1ef

=== 2011-11-04

In ULX. Got bugreport about saving a document does not work - it turns out the
issue is specific to accented filenames (opening works fine).

Given that it works fine in MSO, I'm firing up Wireshark again. It turns out
the fix is to use two different Content-Type for sharepoint requests: when
querying document metadata, the standard application/x-www-form-urlencoded
should be used, while in other requests the old
application/x-vermeer-urlencoded should be used.

Version to test: lpsp-0.1-678-gfa26e72.oxt

Worked on thesis figures, the ones for the 'Background' chapter are almost
ready.

=== 2011-11-05

Finished the figures of the 'Background' chapter, drawn figures of the
'Overview of the Approach' and the 'Design' chapters.

=== 2011-11-06

Worked on figures of the 'Implementation Details' and 'Evaluation' chapters.

== 10th week

=== 2011-11-07

Wrote the workflow part of the 'Introduction' chapter.

=== 2011-11-08

Wrote the Background -> Application servers subsection.

=== 2011-11-09

In ULX. Wrote the Background -> Workflow engines subsection.

=== 2011-11-10

Wrote the Background -> Business Process Model and Notation subsection.

=== 2011-11-11

In ULX. Worked on GUI to display error message when local save to `/tmp` fails.

Version to test: lpsp-0.1-741-geb14ea5.oxt

Wrote the Background -> Object-Relational Mapping and The BPM Console
subsections. Asked Tamas about a real-world use-case, he asked not to mention
the exact company name, but gave enough info so that I could add a reference in
the introduction.

=== 2011-11-12

Wrote the 'Overview of the Approach' chapter, workflow part - till group task support.

=== 2011-11-13

Completed the 'Overview of the Approach' chapter.

== 11th week

=== 2011-11-14

Reviewed the sharepoint part of the Design chapter, wrote Design -> Workflows
-> The workflow library.

=== 2011-11-15

Wrote Design -> Workflows -> jBPM and the BPM console server (renamed from BPM
server and BPM console).

=== 2011-11-16

In ULX. Meeting with Gabor, he explained he wants to keep the source code and
binaries of LPSP private after my thesis is ready. Consensus: discuss license &
copyright questions after the thesis is ready, that's the #1 priority at the
moment.

Finished the Design chapter.

Fixed bug: sample server is added back on restart (inherited bug from OPAL)

Version to test: lpsp-0.1-772-g66e9e4d.oxt

=== 2011-11-17

Wrote Implementation -> Workflow -> Authentication and JSON handling.

=== 2011-11-18

In ULX. Worked on bugfixes:

- Improved file picker to explain what are the consequences of not checking out a document during open.
- When the filename already had an extension, changing the save format type did not update the extension.
- The typed in filename was lost when navigating to a subdirectory.

Version to test: lpsp-0.1-789-g4e35f4d.oxt

Finished the Implementation chapter.

== 12th week

=== 2011-11-21

Worked on the Evaluation chapter:

- updated the document management section
- wrote the workflow section

=== 2011-11-22

Worked on the Related Work chapter.

=== 2011-11-23

In ULX. Bugfixes:

- fixed Hungarian accelerator of the main menu (so alt-D now opens it)
- no need to fire up the save dialog when every input control is disabled

Version to test: lpsp-0.1-807-g6bed690.oxt

Alfresco crashed again:

----
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  Internal Error (safepoint.cpp:237), pid=1263, tid=1684433776
#  Error: guarantee(PageArmed == 0,"invariant")
#
# JRE version: 6.0_18-b07
# Java VM: Java HotSpot(TM) Client VM (16.0-b13 mixed mode linux-x86 )
# An error report file with more information is saved as:
# /mnt/data/documents/bme/diploma1/alfresco/alfresco-3.4.d/hs_err_pid1263.log
#
# If you would like to submit a bug report, please visit:
#   http://java.sun.com/webapps/bugreport/crash.jsp
#
----

(Yes, this is the JVM provided by Alfresco itself.)

=== 2011-11-24

Worked on the Conclusion and Future Work chapter.

TODO:
- more "logged-in"-like info messages when no error occurs
- long filenames in detailed view: horizontal scrollbar, but header does not move?
